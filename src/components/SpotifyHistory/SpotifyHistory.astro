---
export const prerender = false;
import { getCurrentAndRecentTracks } from "../../api/api";
import SpotifyTrackCard from "./SpotifyTrackCard.astro";

const history = await getCurrentAndRecentTracks(20)
---

<style>
    h2 {
        color: var(--light-text-color);
        text-align: center;
        font-size: 1.8rem;
    }

    ul#spotifyHistory {
        width: calc(100% - 16px);
        margin: 0 auto;

        list-style: none;
        display: flex;
        flex-direction: row;
        overflow: auto;
        white-space: nowrap;

        padding-left: unset;
    }

    /* Custom scrollbar */
    /* Not supported on firefox, but the default scrollbar looks fine as-is */
    ul::-webkit-scrollbar {
        height: 6px;
    }

    ul::-webkit-scrollbar-thumb {
        border-radius: 3px;
        background: #777;
    }

    ul::-webkit-scrollbar-thumb:hover {
        background: #555;
    }

    ul::-webkit-scrollbar-track {
        background-color: var(--dark-background-color);
    }
</style>

<h2>What I've been listening to</h2>
<ul id="spotifyHistory">
    {
        history.map(({track, playedAt}) => (
            <li>
                <SpotifyTrackCard
                    track={track}
                    trackName={track.name}
                    artistName={track.artists[0].name}
                    coverImageUrl={track.album.images[0].url}
                    playedAt={playedAt}
                />
            </li>
        ))
    }
</ul>

<script>
    let mouseDown = false;
    let startX: number = 0;
    let scrollLeft: number = 0;
    const slider: HTMLUListElement = document.getElementById("spotifyHistory")! as HTMLUListElement;

    const startDragging = (e: MouseEvent) => {
        mouseDown = true;
        startX = e.pageX - slider.offsetLeft;
        scrollLeft = slider.scrollLeft;
    }

    const stopDragging = (e: MouseEvent) => {
        mouseDown = false;
    }

    const move = (e: MouseEvent) => {
        e.preventDefault();
        if (!mouseDown) return;
        const x = e.pageX - slider.offsetLeft;
        const scroll = x - startX;
        slider.scrollLeft = scrollLeft - scroll
    }

    // Add the event listeners
    slider.addEventListener('mousemove', move, false);
    slider.addEventListener('mousedown', startDragging, false);
    slider.addEventListener('mouseup', stopDragging, false);
    slider.addEventListener('mouseleave', stopDragging, false);
</script>
